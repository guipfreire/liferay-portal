/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.translation.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.translation.model.TranslationEntry;
import com.liferay.translation.model.TranslationEntryModel;
import com.liferay.translation.model.TranslationEntrySoap;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the TranslationEntry service. Represents a row in the &quot;TranslationEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>TranslationEntryModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TranslationEntryImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TranslationEntryImpl
 * @generated
 */
@JSON(strict = true)
public class TranslationEntryModelImpl
	extends BaseModelImpl<TranslationEntry> implements TranslationEntryModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a translation entry model instance should use the <code>TranslationEntry</code> interface instead.
	 */
	public static final String TABLE_NAME = "TranslationEntry";

	public static final Object[][] TABLE_COLUMNS = {
		{"mvccVersion", Types.BIGINT}, {"uuid_", Types.VARCHAR},
		{"translationEntryId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"classNameId", Types.BIGINT},
		{"classPK", Types.BIGINT}, {"content", Types.CLOB},
		{"contentType", Types.VARCHAR}, {"languageId", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("mvccVersion", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("translationEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("classNameId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("classPK", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("content", Types.CLOB);
		TABLE_COLUMNS_MAP.put("contentType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("languageId", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table TranslationEntry (mvccVersion LONG default 0 not null,uuid_ VARCHAR(75) null,translationEntryId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,classNameId LONG,classPK LONG,content TEXT null,contentType VARCHAR(75) null,languageId VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP = "drop table TranslationEntry";

	public static final String ORDER_BY_JPQL =
		" ORDER BY translationEntry.translationEntryId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY TranslationEntry.translationEntryId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final long CLASSNAMEID_COLUMN_BITMASK = 1L;

	public static final long CLASSPK_COLUMN_BITMASK = 2L;

	public static final long COMPANYID_COLUMN_BITMASK = 4L;

	public static final long GROUPID_COLUMN_BITMASK = 8L;

	public static final long LANGUAGEID_COLUMN_BITMASK = 16L;

	public static final long UUID_COLUMN_BITMASK = 32L;

	public static final long TRANSLATIONENTRYID_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TranslationEntry toModel(TranslationEntrySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TranslationEntry model = new TranslationEntryImpl();

		model.setMvccVersion(soapModel.getMvccVersion());
		model.setUuid(soapModel.getUuid());
		model.setTranslationEntryId(soapModel.getTranslationEntryId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setClassNameId(soapModel.getClassNameId());
		model.setClassPK(soapModel.getClassPK());
		model.setContent(soapModel.getContent());
		model.setContentType(soapModel.getContentType());
		model.setLanguageId(soapModel.getLanguageId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TranslationEntry> toModels(
		TranslationEntrySoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<TranslationEntry> models = new ArrayList<TranslationEntry>(
			soapModels.length);

		for (TranslationEntrySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public TranslationEntryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _translationEntryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTranslationEntryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _translationEntryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TranslationEntry.class;
	}

	@Override
	public String getModelClassName() {
		return TranslationEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<TranslationEntry, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<TranslationEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TranslationEntry, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((TranslationEntry)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<TranslationEntry, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<TranslationEntry, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(TranslationEntry)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<TranslationEntry, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<TranslationEntry, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, TranslationEntry>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			TranslationEntry.class.getClassLoader(), TranslationEntry.class,
			ModelWrapper.class);

		try {
			Constructor<TranslationEntry> constructor =
				(Constructor<TranslationEntry>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<TranslationEntry, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<TranslationEntry, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<TranslationEntry, Object>>
			attributeGetterFunctions =
				new LinkedHashMap<String, Function<TranslationEntry, Object>>();
		Map<String, BiConsumer<TranslationEntry, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<TranslationEntry, ?>>();

		attributeGetterFunctions.put(
			"mvccVersion", TranslationEntry::getMvccVersion);
		attributeSetterBiConsumers.put(
			"mvccVersion",
			(BiConsumer<TranslationEntry, Long>)
				TranslationEntry::setMvccVersion);
		attributeGetterFunctions.put("uuid", TranslationEntry::getUuid);
		attributeSetterBiConsumers.put(
			"uuid",
			(BiConsumer<TranslationEntry, String>)TranslationEntry::setUuid);
		attributeGetterFunctions.put(
			"translationEntryId", TranslationEntry::getTranslationEntryId);
		attributeSetterBiConsumers.put(
			"translationEntryId",
			(BiConsumer<TranslationEntry, Long>)
				TranslationEntry::setTranslationEntryId);
		attributeGetterFunctions.put("groupId", TranslationEntry::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<TranslationEntry, Long>)TranslationEntry::setGroupId);
		attributeGetterFunctions.put(
			"companyId", TranslationEntry::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<TranslationEntry, Long>)TranslationEntry::setCompanyId);
		attributeGetterFunctions.put("userId", TranslationEntry::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<TranslationEntry, Long>)TranslationEntry::setUserId);
		attributeGetterFunctions.put("userName", TranslationEntry::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<TranslationEntry, String>)
				TranslationEntry::setUserName);
		attributeGetterFunctions.put(
			"createDate", TranslationEntry::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<TranslationEntry, Date>)
				TranslationEntry::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", TranslationEntry::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<TranslationEntry, Date>)
				TranslationEntry::setModifiedDate);
		attributeGetterFunctions.put(
			"classNameId", TranslationEntry::getClassNameId);
		attributeSetterBiConsumers.put(
			"classNameId",
			(BiConsumer<TranslationEntry, Long>)
				TranslationEntry::setClassNameId);
		attributeGetterFunctions.put("classPK", TranslationEntry::getClassPK);
		attributeSetterBiConsumers.put(
			"classPK",
			(BiConsumer<TranslationEntry, Long>)TranslationEntry::setClassPK);
		attributeGetterFunctions.put("content", TranslationEntry::getContent);
		attributeSetterBiConsumers.put(
			"content",
			(BiConsumer<TranslationEntry, String>)TranslationEntry::setContent);
		attributeGetterFunctions.put(
			"contentType", TranslationEntry::getContentType);
		attributeSetterBiConsumers.put(
			"contentType",
			(BiConsumer<TranslationEntry, String>)
				TranslationEntry::setContentType);
		attributeGetterFunctions.put(
			"languageId", TranslationEntry::getLanguageId);
		attributeSetterBiConsumers.put(
			"languageId",
			(BiConsumer<TranslationEntry, String>)
				TranslationEntry::setLanguageId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getMvccVersion() {
		return _mvccVersion;
	}

	@Override
	public void setMvccVersion(long mvccVersion) {
		_mvccVersion = mvccVersion;
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		_columnBitmask |= UUID_COLUMN_BITMASK;

		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getTranslationEntryId() {
		return _translationEntryId;
	}

	@Override
	public void setTranslationEntryId(long translationEntryId) {
		_translationEntryId = translationEntryId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getClassName() {
		if (getClassNameId() <= 0) {
			return "";
		}

		return PortalUtil.getClassName(getClassNameId());
	}

	@Override
	public void setClassName(String className) {
		long classNameId = 0;

		if (Validator.isNotNull(className)) {
			classNameId = PortalUtil.getClassNameId(className);
		}

		setClassNameId(classNameId);
	}

	@JSON
	@Override
	public long getClassNameId() {
		return _classNameId;
	}

	@Override
	public void setClassNameId(long classNameId) {
		_columnBitmask |= CLASSNAMEID_COLUMN_BITMASK;

		if (!_setOriginalClassNameId) {
			_setOriginalClassNameId = true;

			_originalClassNameId = _classNameId;
		}

		_classNameId = classNameId;
	}

	public long getOriginalClassNameId() {
		return _originalClassNameId;
	}

	@JSON
	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		_columnBitmask |= CLASSPK_COLUMN_BITMASK;

		if (!_setOriginalClassPK) {
			_setOriginalClassPK = true;

			_originalClassPK = _classPK;
		}

		_classPK = classPK;
	}

	public long getOriginalClassPK() {
		return _originalClassPK;
	}

	@JSON
	@Override
	public String getContent() {
		if (_content == null) {
			return "";
		}
		else {
			return _content;
		}
	}

	@Override
	public void setContent(String content) {
		_content = content;
	}

	@JSON
	@Override
	public String getContentType() {
		if (_contentType == null) {
			return "";
		}
		else {
			return _contentType;
		}
	}

	@Override
	public void setContentType(String contentType) {
		_contentType = contentType;
	}

	@JSON
	@Override
	public String getLanguageId() {
		if (_languageId == null) {
			return "";
		}
		else {
			return _languageId;
		}
	}

	@Override
	public void setLanguageId(String languageId) {
		_columnBitmask |= LANGUAGEID_COLUMN_BITMASK;

		if (_originalLanguageId == null) {
			_originalLanguageId = _languageId;
		}

		_languageId = languageId;
	}

	public String getOriginalLanguageId() {
		return GetterUtil.getString(_originalLanguageId);
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(TranslationEntry.class.getName()),
			getClassNameId());
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), TranslationEntry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TranslationEntry toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, TranslationEntry>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TranslationEntryImpl translationEntryImpl = new TranslationEntryImpl();

		translationEntryImpl.setMvccVersion(getMvccVersion());
		translationEntryImpl.setUuid(getUuid());
		translationEntryImpl.setTranslationEntryId(getTranslationEntryId());
		translationEntryImpl.setGroupId(getGroupId());
		translationEntryImpl.setCompanyId(getCompanyId());
		translationEntryImpl.setUserId(getUserId());
		translationEntryImpl.setUserName(getUserName());
		translationEntryImpl.setCreateDate(getCreateDate());
		translationEntryImpl.setModifiedDate(getModifiedDate());
		translationEntryImpl.setClassNameId(getClassNameId());
		translationEntryImpl.setClassPK(getClassPK());
		translationEntryImpl.setContent(getContent());
		translationEntryImpl.setContentType(getContentType());
		translationEntryImpl.setLanguageId(getLanguageId());

		translationEntryImpl.resetOriginalValues();

		return translationEntryImpl;
	}

	@Override
	public int compareTo(TranslationEntry translationEntry) {
		long primaryKey = translationEntry.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof TranslationEntry)) {
			return false;
		}

		TranslationEntry translationEntry = (TranslationEntry)object;

		long primaryKey = translationEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		TranslationEntryModelImpl translationEntryModelImpl = this;

		translationEntryModelImpl._originalUuid =
			translationEntryModelImpl._uuid;

		translationEntryModelImpl._originalGroupId =
			translationEntryModelImpl._groupId;

		translationEntryModelImpl._setOriginalGroupId = false;

		translationEntryModelImpl._originalCompanyId =
			translationEntryModelImpl._companyId;

		translationEntryModelImpl._setOriginalCompanyId = false;

		translationEntryModelImpl._setModifiedDate = false;

		translationEntryModelImpl._originalClassNameId =
			translationEntryModelImpl._classNameId;

		translationEntryModelImpl._setOriginalClassNameId = false;

		translationEntryModelImpl._originalClassPK =
			translationEntryModelImpl._classPK;

		translationEntryModelImpl._setOriginalClassPK = false;

		translationEntryModelImpl._originalLanguageId =
			translationEntryModelImpl._languageId;

		translationEntryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TranslationEntry> toCacheModel() {
		TranslationEntryCacheModel translationEntryCacheModel =
			new TranslationEntryCacheModel();

		translationEntryCacheModel.mvccVersion = getMvccVersion();

		translationEntryCacheModel.uuid = getUuid();

		String uuid = translationEntryCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			translationEntryCacheModel.uuid = null;
		}

		translationEntryCacheModel.translationEntryId = getTranslationEntryId();

		translationEntryCacheModel.groupId = getGroupId();

		translationEntryCacheModel.companyId = getCompanyId();

		translationEntryCacheModel.userId = getUserId();

		translationEntryCacheModel.userName = getUserName();

		String userName = translationEntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			translationEntryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			translationEntryCacheModel.createDate = createDate.getTime();
		}
		else {
			translationEntryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			translationEntryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			translationEntryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		translationEntryCacheModel.classNameId = getClassNameId();

		translationEntryCacheModel.classPK = getClassPK();

		translationEntryCacheModel.content = getContent();

		String content = translationEntryCacheModel.content;

		if ((content != null) && (content.length() == 0)) {
			translationEntryCacheModel.content = null;
		}

		translationEntryCacheModel.contentType = getContentType();

		String contentType = translationEntryCacheModel.contentType;

		if ((contentType != null) && (contentType.length() == 0)) {
			translationEntryCacheModel.contentType = null;
		}

		translationEntryCacheModel.languageId = getLanguageId();

		String languageId = translationEntryCacheModel.languageId;

		if ((languageId != null) && (languageId.length() == 0)) {
			translationEntryCacheModel.languageId = null;
		}

		return translationEntryCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<TranslationEntry, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<TranslationEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TranslationEntry, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((TranslationEntry)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<TranslationEntry, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<TranslationEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TranslationEntry, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((TranslationEntry)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, TranslationEntry>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private long _mvccVersion;
	private String _uuid;
	private String _originalUuid;
	private long _translationEntryId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _classNameId;
	private long _originalClassNameId;
	private boolean _setOriginalClassNameId;
	private long _classPK;
	private long _originalClassPK;
	private boolean _setOriginalClassPK;
	private String _content;
	private String _contentType;
	private String _languageId;
	private String _originalLanguageId;
	private long _columnBitmask;
	private TranslationEntry _escapedModel;

}